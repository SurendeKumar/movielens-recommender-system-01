[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "movie-reccommender-system"
version = "1.0.0"
description = "A conversational AI movie assistant using FastAPI, SQLite, and LLMs."
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
authors = [
  { name = "Your Name", email = "your.email@example.com" }
]
keywords = ["movies", "recommendation-system", "LLM", "FastAPI", "SQLite"]

dependencies = [
  "fastapi>=0.111.0",
  "uvicorn[standard]>=0.30.0",
  "sqlalchemy>=2.0",
  "pydantic>=2.0",
  "openai>=1.0.0",   # if using OpenAI API
  "httpx>=0.27.0",
  "python-dotenv>=1.0.0",
  "loguru>=0.7.0",
  "transformers==4.44.2",    
  "torch==2.4.1",            
  "accelerate==0.34.2",      
  "safetensors>=0.4.5",     
  "huggingface-hub>=0.23.0", 
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0",
  "pytest-asyncio>=0.21",
  "black>=24.0",
  "isort>=5.12.0",
  "flake8>=6.0.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["movie_reccommender_system*"]

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["movie_reccommender_system"]

[tool.coverage.report]
show_missing = true
skip_covered = true
